{"name":"React explicit prop declaration","tagline":"React mixin to validate properties passed into a React component, and validate that they are explicitly defined in propTypes.","body":"# React Explicit Prop Declaration Mixin\r\n\r\nA ReactJS Mixin to ensure that components explicitly define the properties they\r\nallow in their `propTypes`. If a property passed in to the React component is\r\nnot found in `propTypes` then an error will be thrown.\r\n\r\nThis is useful for ensuring that all component property interfaces be\r\nexplicitly defined, which helps when reasoning about what properties a component\r\nwill accept.\r\n\r\n**Let's keep our interfaces clean and well documented!**\r\n\r\n## Example\r\n\r\nLet's define a very basic React component.\r\n\r\n```javascript\r\nvar ExplicitPropDeclarationMixin = require('react_explicit_prop_declaration');\r\n\r\nvar MyComponent = React.createClass({\r\n\r\n  mixins: [ExplicitPropDeclarationMixin],\r\n\r\n  propTypes: {\r\n    defined: React.PropTypes.bool\r\n  },\r\n\r\n  render: function () {\r\n    // ...\r\n  }\r\n\r\n});\r\n```\r\n\r\nAnd now let's render that component with the property we defined in `propTypes`:\r\n\r\n```javascript\r\nReact.render(<MyComponent defined={true}} />\r\n```\r\n\r\n> <MyComponent Instance>\r\n\r\nCool, so let's do the same, but this time, with a property we did not define in\r\n`propTypes`.\r\n\r\n```javascript\r\nReact.render(<MyComponent notDefined={false} defined={true}} />\r\n```\r\n\r\nEeek! An error was thrown telling us what went wrong!\r\n\r\n> ExplicitPropDeclarationError: The properties \"notDefined\" were set on the MyComponent, which were not declared in MyComponent.propTypes. Only properties defined in MyComponent.propTypes are allowed to be set on MyComponent.\r\n\r\nLooks like, we, as developers need to decide to _explicitly_ define another\r\n`propType` we allow on this component, or fix our `render` call to not pass in\r\nunexpected properties.\r\n\r\n## Contributing\r\n\r\nIf you would like to contribute code, please do the following:\r\n\r\n1. Fork this repository and make your changes.\r\n2. Write tests for any new functionality. If you are fixing a bug that tests did not cover, please make a test that reproduces the bug.\r\n3. Add your name to the \"contributors\" section in the package.json file.\r\n4. Squash all of your commits into a single commit via git rebase -i.\r\n5. Run the tests by running npm install && make test from the source directory.\r\n6. Assuming those pass, send the Pull Request off to me for review!\r\n\r\nPlease do not iterate the package.json version number â€“ I will do that myself\r\nwhen I publish it to NPM.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}